<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.training524.dao.UserEntityMapper">
  <resultMap id="BaseResultMap" type="com.example.training524.dao.entity.UserEntity">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="stop_time" jdbcType="TIMESTAMP" property="stopTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="created_by" jdbcType="CHAR" property="createdBy" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="last_update_by" jdbcType="CHAR" property="lastUpdateBy" />
    <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
  </resultMap>

  <sql id="Base_Column_List">
    id, username, password, start_time, stop_time, status, created_by, creation_date,
    last_updated_by, last_update_date
  </sql>

  <!--查找所有用户信息-->
  <select id="queryUserList" parameterType="java.lang.String" resultType="com.example.training524.dao.entity.UserEntity">
    SELECT
    *
    FROM user_info
    WHERE status = "1"
  </select>

  <insert id="insert" parameterType="com.example.training524.dao.entity.UserEntity">
    insert into user_info (id, username, password,
    start_time, stop_time,
    status, created_by, creation_date,
    last_update_by, last_update_date)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{startTime,jdbcType=TIMESTAMP}, #{stopTime,jdbcType=TIMESTAMP},
    #{status,jdbcType=VARCHAR}, #{createdBy,jdbcType=CHAR}, #{creationDate,jdbcType=TIMESTAMP},
    #{lastUpdateBy,jdbcType=CHAR}, #{lastUpdateDate,jdbcType=TIMESTAMP})
  </insert>

  <delete id="deleteUserById" parameterType="com.example.training524.dao.entity.UserEntity">
    delete from user_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteUserByName" parameterType="com.example.training524.dao.entity.UserEntity">
    delete from user_info
    where username = #{username,jdbcType=VARCHAR}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.example.training524.dao.entity.UserEntity">
    update user_info
    set username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},

    start_time = #{startTime,jdbcType=TIMESTAMP},
    stop_time = #{stopTime,jdbcType=TIMESTAMP},
    status = #{status,jdbcType=VARCHAR},
    created_by = #{createdBy,jdbcType=CHAR},
    creation_date = #{creationDate,jdbcType=TIMESTAMP},
    last_update_by = #{lastUpdateBy,jdbcType=CHAR},
    last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.training524.dao.entity.UserEntity">
    update user_info
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>

      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stopTime != null">
        stop_time = #{stopTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=CHAR},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null">
        last_updated_by = #{lastUpdateBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

















    <!--根据用户名(和密码)查找用户信息-->
  <select id="selectUserInfo" parameterType="java.lang.String" resultType="com.example.training524.dao.entity.UserEntity">
    SELECT id,username,`password`,status
    FROM user_info
    WHERE username = #{username,jdbcType=VARCHAR} and `password` = #{password,jdbcType=VARCHAR}
    AND status = "1"
  </select>

</mapper>